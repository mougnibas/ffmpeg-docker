<?xml version="1.0" encoding="UTF-8"?>
<!-- Â© Copyright 2017-2018 Yoann MOUGNIBAS -->

<!-- This file is part of Cook-Helper. -->

<!-- Cook-Helper is free software: you can redistribute it and/or modify -->
<!-- it under the terms of the GNU General Public License as published by -->
<!-- the Free Software Foundation, either version 3 of the License, or -->
<!-- (at your option) any later version. -->

<!-- Cook-Helper is distributed in the hope that it will be useful, -->
<!-- but WITHOUT ANY WARRANTY; without even the implied warranty of -->
<!-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the -->
<!-- GNU General Public License for more details. -->

<!-- You should have received a copy of the GNU General Public License -->
<!-- along with Cook-Helper. If not, see <http://www.gnu.org/licenses/> -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0           http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<!-- Parent comon configuration -->
	<parent>
		<groupId>fr.mougnibas.base-maven</groupId>
		<artifactId>base-maven</artifactId>
		<version>1.0.1</version>
	</parent>

	<!-- Project ID -->
	<groupId>fr.mougnibas.ffmpeg-docker</groupId>
	<artifactId>ffmpeg-docker</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<!-- General informations -->
	<name>ffmpeg docker project</name>
	<description>A project to provide ffmpeg onto docker</description>
	<inceptionYear>2018</inceptionYear>

	<scm>
		<connection>scm:git:https://github.com/mougnibas/ffmpeg-docker.git</connection>
		<developerConnection>scm:git:ssh://git@github.com:mougnibas/ffmpeg-docker.git</developerConnection>
	</scm>

	<properties>

		<!-- Same java level for both source and target : Java 11 -->
		<maven.compiler.release>11</maven.compiler.release>

		<!-- File encoding is UTF-8 -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<!-- Don't deploy maven artifact -->
		<maven.deploy.skip>true</maven.deploy.skip>

		<!-- Don't display the repository locations of the dependencies -->
		<!-- (to speed up the build) -->
		<dependency.locations.enabled>false</dependency.locations.enabled>

	</properties>

	<build>
		<plugins>
			<plugin>
				<!-- Copy the Dockerfile to the docker build context -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/docker-build-context</outputDirectory>
							<resources>
								<resource>
									<!-- Dockerfile-->
									<directory>${project.basedir}/src/main/docker/</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<executions>
					<execution>
						<!-- Build the docker image -->
						<id>docker-build</id>
						<phase>package</phase>
						<goals>
							<goal>build</goal>
						</goals>
						<configuration>
							<verbose>true</verbose>
							<showLogs>true</showLogs>
							<images>
								<image>
									<name>mougnibas/fr.mougnibas.ffmpeg-docker:%l</name>
									<build>
										<dockerFileDir>${project.build.directory}/docker-build-context</dockerFileDir>
									</build>
								</image>
							</images>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<!-- =========================================== -->
			<!-- Common configuration profile -->
			<!-- Activated by default. -->
			<!-- =========================================== -->
			<id>common-configuration</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<pluginManagement>
					<plugins>
						<!-- Third party plugins -->
						<plugin>
							<!-- https://dmp.fabric8.io/ -->
							<groupId>io.fabric8</groupId>
							<artifactId>docker-maven-plugin</artifactId>
							<version>0.27.2</version>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>
		<profile>
			<!-- =========================================== -->
			<!-- Check / Verification profile -->
			<!-- Activated by default. -->
			<!-- =========================================== -->
			<id>check</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<!-- Enforce requirements. Can be debate. -->
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-enforcer-plugin</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>enforce</goal>
								</goals>
								<phase>validate</phase>
								<configuration>
									<rules>
										<requireMavenVersion>
											<version>[3.6.0]</version>
										</requireMavenVersion>
										<requireJavaVersion>
											<version>[11.0.1]</version>
										</requireJavaVersion>
										<requireOS>
											<name>windows 10</name>
											<version>10.0</version>
											<family>windows</family>
											<arch>amd64</arch>
										</requireOS>
										<reactorModuleConvergence />
									</rules>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
